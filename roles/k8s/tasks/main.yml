# vim: set ft=Ansible ts=2


# Reset cluster
#
# This task is placed at top in order to bypass all assertions and avoid
# information gathering.
- name: Reset Kubernetes
  ansible.builtin.include_tasks:
    file: teardown.yml
    apply: { tags: [ teardown ] }
  tags: [never, teardown, remove]


# Remove Kubernetes
#
# This task is placed at top in order to bypass all assertions and avoid
# information gathering.
- name: Remove Kubernetes
  ansible.builtin.include_tasks:
    file: remove.yml
    apply: { tags: [ remove ] }
  tags: [never, remove]


# Assertions
#
# Assert the the role has been invoked with the correct tags and with a valid set of hosts.
# This apply only for installation and cluster management.
- name: Assertions
  ansible.builtin.include_tasks:
    file: assert.yml
    apply: { tags: [ setup ] }
  tags: [never, setup]


# Facts collection
#
# Collect custom facts 
- name: Preflight facts collection
  ansible.builtin.include_tasks:
    file: facts.yml
    apply: { tags: [ setup ] }
  tags: [never, setup]


# Installation
#
# Install Kubernetes and Python dependencies API binding
# to operate the cluster.
- name: Installation
  ansible.builtin.include_tasks:
    file: install.yml
    apply: { tags: [ setup ] }
  tags: [never, setup]


# Prepare kubeconfig
#
# Ensure that the latest version of the system's default kubeconfig is installed
# and that the next tasks will run seamlessly.

- name: Create kubeconfig root directory
  file:
    path: "{{ jpclipffel_k8s_k8s_kubeconfig | dirname }}"
    state: directory
    mode: 0755
  when:
    - jpclipffel_k8s_k8s_node_type == "master"
  tags: [never, setup]

- name: Copy kubeconfig
  copy:
    remote_src: yes
    src: "{{ jpclipffel_k8s_k8s_kubeconfig_default }}"
    dest: "{{ jpclipffel_k8s_k8s_kubeconfig }}"
    mode: 0644
  failed_when: false
  when:
    - jpclipffel_k8s_k8s_node_type == "master"
  tags: [never, setup]


# Deploy cluster
#
# Deploy the Kubernetes cluster (master and worker nodes)
- name: Cluster setup
  ansible.builtin.include_tasks:
    file: cluster.yml
    apply: { tags: [ setup ] }
  tags: [never, setup]


# Facts collection
#
# Collect custom facts
- name: Postflight facts collection
  ansible.builtin.include_tasks:
    file: facts.yml
    apply: { tags: [ always, stats ] }
  tags: [never, stats, setup]
  # tags: [never, stats, setup, teardown, remove]


# Print facts
- name: Print facts
  debug:
    var: "{{ item }}"
  with_items:
    - jpclipffel_k8s_k8s_helm_exists
    - jpclipffel_k8s_k8s_kubelet_running
    - jpclipffel_k8s_k8s_kubelet_healthy
    - jpclipffel_k8s_k8s_cluster_running
    - jpclipffel_k8s_k8s_kubeadm_version_major
    - jpclipffel_k8s_k8s_kubeadm_version_minor
  tags: [never, stats]


# Inventory helper
#
# Read inventory and deduce whos a master, a worker and setup the
# proper required inventory variables.
- name: Scanning inventory
  ansible.builtin.include_tasks:
    file: inventory_helper.yml
    apply: { tags: [ apply ] }
  tags: [never, apply]
